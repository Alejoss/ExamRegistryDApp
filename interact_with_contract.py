import json
import os
from web3 import Web3, HTTPProvider

w3 = Web3(HTTPProvider('http://127.0.0.1:7545'))

# contract_dir = os.path.abspath('./contracts/')
abi = json.loads('[{"constant":false,"inputs":[{"internalType":"string","name":"hash","type":"string"}],"name":"addExam","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"studentAddress","type":"address"}],"name":"studentAddExam","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"constant":true,"inputs":[{"internalType":"address","name":"studentAddress","type":"address"}],"name":"checkStudentPassedExam","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getProfessorsExam","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"string","name":"hash","type":"string"}],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"}]')
bytecode = "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a32806100606000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633c9a1c391461005c578063b85e943d14610119578063db874295146101ec578063e7624d54146102a7578063f60412721461032a575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610386565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100de5780820151818401526020810190506100c3565b50505050905090810190601f16801561010b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d26004803603602081101561012f57600080fd5b810190808035906020019064010000000081111561014c57600080fd5b82018360208201111561015e57600080fd5b8035906020019184600183028401116401000000008311171561018057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610534565b604051808215151515815260200191505060405180910390f35b6102a56004803603602081101561020257600080fd5b810190808035906020019064010000000081111561021f57600080fd5b82018360208201111561023157600080fd5b8035906020019184600183028401116401000000008311171561025357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610679565b005b6102af6106d0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ef5780820151818401526020810190506102d4565b50505050905090810190601f16801561031c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61036c6004803603602081101561034057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107af565b604051808215151515815260200191505060405180910390f35b606080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561045c5780601f106104315761010080835404028352916020019161045c565b820191906000526020600020905b81548152906001019060200180831161043f57829003601f168201915b5050505050905060006003826040518082805190602001908083835b6020831061049b5780518252602082019150602081019050602083039250610478565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060018160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508192505050919050565b6000816040516020018082805190602001908083835b6020831061056d578051825260208201915060208101905060208303925061054a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405160200180828054600181600116156101000203166002900480156106455780601f10610623576101008083540402835291820191610645565b820191906000526020600020905b815481529060010190602001808311610631575b505091505060405160208183030381529060405280519060200120141561066f5760019050610674565b600090505b919050565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906106cc929190610958565b5050565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107a55780601f1061077a576101008083540402835291602001916107a5565b820191906000526020600020905b81548152906001019060200180831161078857829003601f168201915b5050505050905090565b60006060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108865780601f1061085b57610100808354040283529160200191610886565b820191906000526020600020905b81548152906001019060200180831161086957829003601f168201915b5050505050905060006003826040518082805190602001908083835b602083106108c557805182526020820191506020810190506020830392506108a2565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060008160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050809350505050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061099957805160ff19168380011785556109c7565b828001600101855582156109c7579182015b828111156109c65782518255916020019190600101906109ab565b5b5090506109d491906109d8565b5090565b6109fa91905b808211156109f65760008160009055506001016109de565b5090565b9056fea265627a7a723158201731f699e5a59f47f66223aeedbeb8a982f666636d54eed94cfe7f684047a8e164736f6c634300050b0032"

w3.eth.defaultAccount = w3.eth.accounts[0]
Exams = w3.eth.contract(abi=abi, bytecode=bytecode)

# This deploys the contract
tx_hash = Exams.constructor().transact()

tx_receipt = w3.eth.waitForTransactionReceipt(tx_hash)
print(tx_receipt.contractAddress)
exams = w3.eth.contract(
    address="0x1f4F5350669c3586D7BD95d503C4FA7C1E62179b",
    abi=abi
)

print(w3.eth.blockNumber)

# Test the contract
# exam_hash = "9B70ECA3C4BF210264CE44B42DE6A2095C440B857D8F94A44F7440E389A3A1BC"

# Add an exam to the first address
# tx_hash = exams.functions.addExam(exam_hash).transact()
# # print("addExam:")
# # print(tx_hash)
#
# # Confirm the exam is owned by the first address
# is_owner = exams.functions.isOwner(exam_hash).call()
# print("isOwner:")
# print(is_owner)
#
# # Add a student address to the list of addresses that have passed the exam
# # print(w3. eth.accounts[1])
# tx_hash3 = exams.functions.studentAddExam(w3.eth.accounts[1]).transact()
#
# professors_exam = exams.functions.getProfessorsExam().call()
# print("getProfessorsExam:")
# print(professors_exam)
#
# student_passed_exam = exams.functions.checkStudentPassedExam(exam_hash).call({'from': w3.eth.accounts[1]})
# print("checkStudentPassedExam:")
# print(student_passed_exam)
